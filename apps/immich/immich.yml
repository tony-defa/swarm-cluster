x-default-opts: &default-opts
  logging:
    options:
      max-size: "1m"

services:
  immich-server:
    <<: *default-opts
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - immich_upload_data:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    networks:
      - immich_network
      - proxy_network
    healthcheck:
      disable: false
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "true"
        traefik.http.routers.immich.entrypoints: ${ENTRYPOINT:-websecure}
        traefik.http.routers.immich.rule: Host(`${DOMAIN:-immich.host.local}`)
        traefik.http.routers.immich.service: immich-server
        traefik.http.services.immich-server.loadbalancer.server.port: 2283

  immich-machine-learning:
    <<: *default-opts
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    networks:
      - immich_network
    healthcheck:
      disable: false
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  redis:
    <<: *default-opts
    image: docker.io/redis:6.2-alpine@sha256:148bb5411c184abd288d9aaed139c98123eeb8824c5d3fce03cf721db58066d8
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - immich_network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  database:
    <<: *default-opts
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_DB: ${DB_DATABASE_NAME:-immich}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    networks:
      - immich_network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  immich_network:
    driver: overlay
    attachable: true
  proxy_network:
    external: true

volumes:
  immich_upload_data:
    driver: local
    driver_opts:
      device: ${HOST_IMMICH_UPLOAD_DATA} # Bind mount to host path from .env
      type: none
      o: bind
  postgres_data:
    driver: local
    driver_opts:
      device: ${HOST_POSTGRES_DATA} # Bind mount to host path from .env
      type: none
      o: bind
  model-cache: 
    driver: local
    driver_opts:
      device: ${HOST_CACHE_DATA} # re-use cache_data path from .env for model-cache
      type: none
      o: bind