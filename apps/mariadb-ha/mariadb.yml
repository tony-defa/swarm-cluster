version: '3.8'

x-default-opts: &default-opts
  env_file:
    .env
  logging:
    options:
      max-size: "1m"
    # driver: "gelf"
    # options:
    #   gelf-address: "udp://172.17.0.1:12201"
 
services:
  db:
    <<: *default-opts
    image: bitnami/mariadb:${MARIADB_TAG}
    volumes:
      - mariadb_ha_data:/bitnami/mariadb
      - ./entrypoint.d:/docker-entrypoint-startdb.d:ro
    secrets:
      - mariadb_ha_database
      - mariadb_ha_user
      - mariadb_ha_db_password
      - mariadb_ha_repl_user
      - mariadb_ha_repl_password
      - mariadb_ha_root_password
    environment:
      - MARIADB_DATABASE_FILE=/run/secrets/mariadb_ha_database
      - MARIADB_USER_FILE=/run/secrets/mariadb_ha_user
      - MARIADB_PASSWORD_FILE=/run/secrets/mariadb_ha_db_password
      - MARIADB_REPLICATION_MODE=master
      - MARIADB_REPLICATION_USER_FILE=/run/secrets/mariadb_ha_repl_user
      - MARIADB_REPLICATION_PASSWORD_FILE=/run/secrets/mariadb_ha_repl_password
      - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/mariadb_ha_root_password
    networks:
      - mariadb_ha_network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  slave:
    <<: *default-opts
    image: bitnami/mariadb:${MARIADB_TAG}
    secrets:
      - mariadb_ha_repl_user
      - mariadb_ha_repl_password
      - mariadb_ha_root_password
    environment:
      - MARIADB_MASTER_HOST=db
      - MARIADB_MASTER_PORT_NUMBER=3306
      - MARIADB_REPLICATION_MODE=slave
      - MARIADB_REPLICATION_USER_FILE=/run/secrets/mariadb_ha_repl_user
      - MARIADB_REPLICATION_PASSWORD_FILE=/run/secrets/mariadb_ha_repl_password
      - MARIADB_MASTER_ROOT_PASSWORD_FILE=/run/secrets/mariadb_ha_root_password
    networks:
      - mariadb_ha_network
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
        delay: 10s
      restart_policy:
        condition: on-failure

  backup:
    <<: *default-opts
    image: bitnami/mariadb:${MARIADB_TAG}
    volumes:
      - mariadb_ha_data:/bitnami/mariadb
    secrets:
      - mariadb_ha_database
      - mariadb_ha_user
      - mariadb_ha_db_password
    command: 
      - sh
      - -c
      - | 
        echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Backup service started. First dump will be executed in $$BACKUP_FREQUENCY.";
        while true; do
          sleep $$BACKUP_FREQUENCY;
          DB_NAME=$$(cat /run/secrets/mariadb_ha_database);
          DB_USER=$$(cat /run/secrets/mariadb_ha_user);
          DB_PASSWORD=$$(cat /run/secrets/mariadb_ha_db_password);
          backup_dir=/bitnami/mariadb/backup;
          mkdir -p $$backup_dir;
          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Creating SQL dump of $$DB_NAME database..."
          /opt/bitnami/mariadb/bin/mariadb-dump -u $$DB_USER --password=$$DB_PASSWORD --host=db --databases $$DB_NAME --master-data=2 --no-tablespaces > $$backup_dir/db_$$(date +'%Y%m%d_%H%M%S').sql;
          find $$backup_dir -iname "db_*.sql" -mtime +$$RETENTION_DAYS -exec rm -rf {} \;
          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Backup completed. Next dump in $$BACKUP_FREQUENCY.";
        done
    networks:
      - mariadb_ha_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 600s

  slave-init:
    <<: *default-opts
    image: bitnami/mariadb:${MARIADB_TAG}
    user: root
    volumes:
      - mariadb_ha_data:/master/data:ro
    secrets:
      - mariadb_ha_database
      - mariadb_ha_root_password
    networks:
      - mariadb_ha_network
    command:
      - bash
      - -c
      - | 
        apt update && apt --no-install-recommends install netcat -y && rm -rf /var/lib/apt/lists/*;

        BACKUP_DIR="/master/data/backup/";
        NEWEST_DUMP=$$(ls -t $$BACKUP_DIR | head -1);

        if [ -z "$$NEWEST_DUMP" ]; then
          echo "No SQL dump file found in $$BACKUP_DIR";
          exit 0;
        fi

        DB=$$(cat /run/secrets/mariadb_ha_database);
        PW=$$(cat /run/secrets/mariadb_ha_root_password);

        SLAVE_HOSTS=($$(getent hosts tasks.slave | awk '{ print $$1 }'));

        echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Found SQL dump file to restore: $$BACKUP_DIR$$NEWEST_DUMP";
        sed '/^-- CHANGE MASTER TO/ s/^-- //' "$$BACKUP_DIR$$NEWEST_DUMP" > "/tmp/$$NEWEST_DUMP"

        for ip in "$${SLAVE_HOSTS[@]}"; do
          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Processing slave host with IP: $$ip"

          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Wait for slave to be ready..."
          while ! nc -z $$ip 3306; do
            sleep 1;
          done
          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Slave ready. Proceeding..."

          /opt/bitnami/mariadb/bin/mariadb -u root --password=$$PW -h $$ip -e \
          "STOP SLAVE;
          DROP DATABASE IF EXISTS $$DB;"

          /opt/bitnami/mariadb/bin/mariadb -u root --password=$$PW -h $$ip < tmp/$$NEWEST_DUMP

          /opt/bitnami/mariadb/bin/mariadb -u root --password=$$PW -h $$ip -e \
          "START SLAVE;"
          
          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Processing slave host with IP '$$ip' completed."
        done

        echo "[$$(date +'%Y-%m-%d %H:%M:%S')] All slaves are up to date."
        rm "/tmp/$$NEWEST_DUMP"
    deploy:
      update_config:
        delay: 10s
      restart_policy:
        condition: "none"

secrets:
  mariadb_ha_database:
    external: true
  mariadb_ha_user:
    external: true
  mariadb_ha_db_password:
    external: true
  mariadb_ha_root_password:
    external: true 
  mariadb_ha_repl_user:
    external: true 
  mariadb_ha_repl_password:
    external: true 
      
networks:
  mariadb_ha_network:
    external: true

volumes:
  mariadb_ha_data:
    driver: local
    driver_opts:
      device: ${HOST_MARIADB_DATA}
      type: none
      o: bind